name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
  TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

jobs:
  lint:
    name: Clippy (stable)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup DB (reused)
        uses: ./.github/actions/setup-db
        with:
          working-directory: ./api-server

      - name: Run Clippy
        run: cargo clippy --all --all-features -- -D warnings

  test:
    name: Test Suite
    needs: lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup DB (reused)
        uses: ./.github/actions/setup-db
        with:
          working-directory: ./api-server

      - name: Cargo check
        run: cargo check --all --all-targets --all-features

      - name: Tests
        run: cargo test --
